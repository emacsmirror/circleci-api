#+TITLE: CircleCI API

[[https://melpa.org/#/circleci-api][file:https://melpa.org/packages/circleci-api-badge.svg]]
[[https://app.circleci.com/pipelines/github/sulami/circleci-api][file:https://circleci.com/gh/sulami/circleci-api.svg?style=svg]]

Bindings for the CircleCI API.

* Features

- Automatic authentication via API token
- Automatic pagination of list endpoints (fetch up to N pages in one call)
- Asynchronous by default
- Transparent JSON deserialisation
- Backed by the excellent [[https://github.com/tkf/emacs-request][request]] library

* Installing

Simply grab it from [[https://melpa.org/][MELPA]].

** [[https://github.com/jwiegley/use-package][use-package]]

#+begin_src emacs-lisp
(use-package circleci-api
  :ensure t)
#+end_src

** [[https://github.com/raxod502/straight.el][straight.el]]

#+begin_src emacs-lisp
(straight-use-package 'circleci-api)
#+end_src

** package.el

[[https://melpa.org/#/getting-started][Ensure you have MELPA available.]]

=M-x package-install RET circleci-api RET=.

** Manual

Just fetch [[file:circleci-api.el][circleci-api.el]], save it somewhere and load it into
Emacs.

* Configuration

=M-x customize-group RET circleci RET=, or manually by setting the
following variables:

- ~circleci-api-token~ :: The CircleCI API token (default: not set)
- ~circleci-api-host~ :: The CircleCI API host (default: ~https://circleci.com~)

* Use

This package exports a long list of functions named ~circleci-*~. =M-x
apropos RET circleci RET= can help with discovery.

* Coverage

- [X] Project
- [X] Pipeline by ID
- [X] Pipeline config
- [X] Pipeline workflows
- [X] Pipelines by org
- [ ] Pipelines by project
- [ ] Pipelines by user
- [ ] Trigger pipeline
- [ ] Workflow by ID
- [ ] Workflow jobs
- [ ] Cancel workflow
- [ ] Rerun workflow
- [ ] Approve a job

Anything not included in the list above is not implemented yet.
